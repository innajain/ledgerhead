
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  name: 'name',
  group: 'group'
};

exports.Prisma.Income_sourceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  group: 'group'
};

exports.Prisma.Expense_itemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  group: 'group'
};

exports.Prisma.Mutual_fundScalarFieldEnum = {
  id: 'id',
  name: 'name',
  isin: 'isin'
};

exports.Prisma.Mutual_fund_units_lotScalarFieldEnum = {
  id: 'id',
  mutual_fund_id: 'mutual_fund_id'
};

exports.Prisma.Investment_transactionScalarFieldEnum = {
  id: 'id',
  from_account_id: 'from_account_id',
  units_bought: 'units_bought',
  buy_nav: 'buy_nav'
};

exports.Prisma.Redemption_transactionScalarFieldEnum = {
  id: 'id',
  to_account_id: 'to_account_id',
  sell_nav: 'sell_nav',
  units_redeemed: 'units_redeemed'
};

exports.Prisma.Redemption_bucketScalarFieldEnum = {
  id: 'id',
  redemption_transaction_id: 'redemption_transaction_id',
  mutual_fund_units_lot_id: 'mutual_fund_units_lot_id',
  units_redeemed: 'units_redeemed'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  date: 'date',
  time: 'time',
  amount: 'amount',
  type: 'type',
  note: 'note'
};

exports.Prisma.Transfer_transactionScalarFieldEnum = {
  id: 'id',
  from_account_id: 'from_account_id',
  to_account_id: 'to_account_id'
};

exports.Prisma.Expense_transactionScalarFieldEnum = {
  id: 'id',
  account_id: 'account_id',
  expense_item_id: 'expense_item_id'
};

exports.Prisma.Income_transactionScalarFieldEnum = {
  id: 'id',
  income_source_id: 'income_source_id',
  account_id: 'account_id'
};

exports.Prisma.Db_historyScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  event_type: 'event_type',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  snapshot: 'snapshot'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.transaction_type = exports.$Enums.transaction_type = {
  TRANSFER: 'TRANSFER',
  INCOME: 'INCOME',
  EXPENSE: 'EXPENSE',
  MF_INVESTMENT: 'MF_INVESTMENT',
  MF_REDEMPTION: 'MF_REDEMPTION'
};

exports.db_history_event_type = exports.$Enums.db_history_event_type = {
  CREATE: 'CREATE',
  MODIFY: 'MODIFY',
  DELETE: 'DELETE',
  RESTORE: 'RESTORE',
  INIT: 'INIT'
};

exports.db_history_entity_type = exports.$Enums.db_history_entity_type = {
  ACCOUNT: 'ACCOUNT',
  INCOME_SOURCE: 'INCOME_SOURCE',
  EXPENSE_ITEM: 'EXPENSE_ITEM',
  MUTUAL_FUND: 'MUTUAL_FUND',
  TRANSFER_TRANSACTION: 'TRANSFER_TRANSACTION',
  EXPENSE_TRANSACTION: 'EXPENSE_TRANSACTION',
  INCOME_TRANSACTION: 'INCOME_TRANSACTION',
  ACCOUNT_TRANSACTION: 'ACCOUNT_TRANSACTION',
  INVESTMENT_TRANSACTION: 'INVESTMENT_TRANSACTION',
  REDEMPTION_TRANSACTION: 'REDEMPTION_TRANSACTION',
  DB_HISTORY: 'DB_HISTORY'
};

exports.Prisma.ModelName = {
  account: 'account',
  income_source: 'income_source',
  expense_item: 'expense_item',
  mutual_fund: 'mutual_fund',
  mutual_fund_units_lot: 'mutual_fund_units_lot',
  investment_transaction: 'investment_transaction',
  redemption_transaction: 'redemption_transaction',
  redemption_bucket: 'redemption_bucket',
  transaction: 'transaction',
  transfer_transaction: 'transfer_transaction',
  expense_transaction: 'expense_transaction',
  income_transaction: 'income_transaction',
  db_history: 'db_history'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
